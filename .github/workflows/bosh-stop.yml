name: Run BOSH Stop

on:
  workflow_dispatch: { }
  schedule:
    # 22:00 JST on Fridays
    - cron: '00 13 * * 5'
jobs:
  bosh-stop:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install BOSH CLI
        run: ./install-bosh.sh
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.0.0
        with:
          exportToken: true
          exportEnv: true
          method: jwt
          url: ${{ secrets.VAULT_ADDR }}
          role: cicd
          secrets: |
            kv/data/cicd/bosh environment | BOSH_ENVIRONMENT ;
            kv/data/cicd/bosh client | BOSH_CLIENT ;
            kv/data/cicd/bosh client_secret | BOSH_CLIENT_SECRET ;
            kv/data/cicd/bosh ca_cert | BOSH_CA_CERT ;   
            kv/data/cicd/bosh all_proxy | BOSH_ALL_PROXY ;  
            kv/data/cicd/bosh private_key | PRIVATE_KEY ;   
      - name: Set up BOSH environment variables
        run: ./setup-ssh.sh
      - name: Run bosh deployments
        run: |
          bosh deployments --json | jq -r '.Tables[0].Rows[].name' > deployments.txt
      - name: Stop postgres
        run: |
          source retryable.sh
          DEPLOYMENT_NAME=$(cat deployments.txt | grep -E '^postgres-')
          retryable bosh stop --hard -d ${DEPLOYMENT_NAME} -n
      - name: Stop p-healthwatch2-pas-exporter
        run: |
          source retryable.sh
          DEPLOYMENT_NAME=$(cat deployments.txt | grep -E '^p-healthwatch2-pas-exporter')
          retryable bosh stop --hard -d ${DEPLOYMENT_NAME} -n
      - name: Stop p-healthwatch2
        run: |
          source retryable.sh
          DEPLOYMENT_NAME=$(cat deployments.txt | grep -E '^p-healthwatch2' | grep -Ev '^p-healthwatch2-pas')
          retryable bosh stop --hard -d ${DEPLOYMENT_NAME} -n
      - name: Stop service instances
        run: |
          source retryable.sh
          for DEPLOYMENT_NAME in $(cat deployments.txt | grep -E '^service-instance'); do
            retryable bosh stop --hard -d ${DEPLOYMENT_NAME} -n;
          done
      - name: Stop cf
        run: |
          source retryable.sh
          DEPLOYMENT_NAME=$(cat deployments.txt | grep -E '^cf-')
          retryable bosh stop --hard -d ${DEPLOYMENT_NAME} -n
      - name: Revoke token
        if: always()
        run: |
          curl -X POST -s -H "X-Vault-Token: ${VAULT_TOKEN}" ${{ secrets.VAULT_ADDR }}/v1/auth/token/revoke-self || true
